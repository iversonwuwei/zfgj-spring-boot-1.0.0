<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlfc.zfgj.mapper.HouHouseInfoMapper">
  <resultMap id="BaseResultMap" type="com.dlfc.zfgj.entity.HouHouseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PINDEX" jdbcType="INTEGER" property="pindex" />
    <result column="SOURCE" jdbcType="INTEGER" property="source" />
    <result column="NO" jdbcType="VARCHAR" property="no" />
    <result column="EID" jdbcType="VARCHAR" property="eid" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="UID" jdbcType="VARCHAR" property="uid" />
    <result column="BEID" jdbcType="VARCHAR" property="beid" />
    <result column="BASE_ID" jdbcType="VARCHAR" property="baseId" />
    <result column="PROVINCE" jdbcType="VARCHAR" property="province" />
    <result column="CITY" jdbcType="VARCHAR" property="city" />
    <result column="DISTRICT" jdbcType="VARCHAR" property="district" />
    <result column="ROAD" jdbcType="VARCHAR" property="road" />
    <result column="NUMBER" jdbcType="VARCHAR" property="number" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="FLOOR" jdbcType="VARCHAR" property="floor" />
    <result column="DOOR" jdbcType="VARCHAR" property="door" />
    <result column="BUILDING_NO" jdbcType="VARCHAR" property="buildingNo" />
    <result column="HOUSE_ADDR" jdbcType="VARCHAR" property="houseAddr" />
    <result column="PROPERTY_ID_TYPE" jdbcType="INTEGER" property="propertyIdType" />
    <result column="PROPERTY_ID_NO" jdbcType="VARCHAR" property="propertyIdNo" />
    <result column="BUILDING_AREA" jdbcType="DECIMAL" property="buildingArea" />
    <result column="LOCK_STATUS" jdbcType="INTEGER" property="lockStatus" />
    <result column="LOCK_TYPE" jdbcType="INTEGER" property="lockType" />
    <result column="LOCK_REASON" jdbcType="VARCHAR" property="lockReason" />
    <result column="AUDIT_STATUS" jdbcType="INTEGER" property="auditStatus" />
    <result column="REJECT_TYPE" jdbcType="INTEGER" property="rejectType" />
    <result column="REJECT_REASON" jdbcType="VARCHAR" property="rejectReason" />
    <result column="ACTIVE_TYPE" jdbcType="INTEGER" property="activeType" />
    <result column="ACTIVE_REASON" jdbcType="VARCHAR" property="activeReason" />
    <result column="COLLECT_TYPE" jdbcType="INTEGER" property="collectType" />
    <result column="TO_SPECIAL" jdbcType="INTEGER" property="toSpecial" />
    <result column="ACTIVE_STATUS" jdbcType="INTEGER" property="activeStatus" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT" property="createUserIdentity" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
    <result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT" property="modifyUserIdentity" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="LOCK_USERID" jdbcType="VARCHAR" property="lockUserid" />
    <result column="CERT_STATUS" jdbcType="INTEGER" property="certStatus" />
    <result column="LOCK_TIME" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="STRUCTURE" jdbcType="INTEGER" property="structure" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    ID, PINDEX, SOURCE, NO, EID, PHONE, UID, BEID, BASE_ID, PROVINCE, CITY, DISTRICT, 
    ROAD, NUMBER, UNIT, FLOOR, DOOR, BUILDING_NO, HOUSE_ADDR, PROPERTY_ID_TYPE, PROPERTY_ID_NO, 
    BUILDING_AREA, LOCK_STATUS, LOCK_TYPE, LOCK_REASON, AUDIT_STATUS, REJECT_TYPE, REJECT_REASON, 
    ACTIVE_TYPE, ACTIVE_REASON, COLLECT_TYPE, TO_SPECIAL, ACTIVE_STATUS, CREATE_USER, 
    CREATE_USER_IDENTITY, CREATE_TIME, MODIFY_USER, MODIFY_USER_IDENTITY, MODIFY_TIME, 
    DELETE_FLG, VERSION, LOCK_USERID, CERT_STATUS, LOCK_TIME, STRUCTURE
  </sql>
  <select id="selectByExample" parameterType="com.dlfc.zfgj.entity.HouHouseInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hou_house_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from hou_house_info
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    delete from hou_house_info
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlfc.zfgj.entity.HouHouseInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    delete from hou_house_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlfc.zfgj.entity.HouHouseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    insert into hou_house_info (ID, PINDEX, SOURCE, 
      NO, EID, PHONE, UID, 
      BEID, BASE_ID, PROVINCE, 
      CITY, DISTRICT, ROAD, 
      NUMBER, UNIT, FLOOR, 
      DOOR, BUILDING_NO, HOUSE_ADDR, 
      PROPERTY_ID_TYPE, PROPERTY_ID_NO, BUILDING_AREA, 
      LOCK_STATUS, LOCK_TYPE, LOCK_REASON, 
      AUDIT_STATUS, REJECT_TYPE, REJECT_REASON, 
      ACTIVE_TYPE, ACTIVE_REASON, COLLECT_TYPE, 
      TO_SPECIAL, ACTIVE_STATUS, CREATE_USER, 
      CREATE_USER_IDENTITY, CREATE_TIME, MODIFY_USER, 
      MODIFY_USER_IDENTITY, MODIFY_TIME, DELETE_FLG, 
      VERSION, LOCK_USERID, CERT_STATUS, 
      LOCK_TIME, STRUCTURE)
    values (#{id,jdbcType=VARCHAR}, #{pindex,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, 
      #{no,jdbcType=VARCHAR}, #{eid,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, 
      #{beid,jdbcType=VARCHAR}, #{baseId,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{road,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR}, 
      #{door,jdbcType=VARCHAR}, #{buildingNo,jdbcType=VARCHAR}, #{houseAddr,jdbcType=VARCHAR}, 
      #{propertyIdType,jdbcType=INTEGER}, #{propertyIdNo,jdbcType=VARCHAR}, #{buildingArea,jdbcType=DECIMAL}, 
      #{lockStatus,jdbcType=INTEGER}, #{lockType,jdbcType=INTEGER}, #{lockReason,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=INTEGER}, #{rejectType,jdbcType=INTEGER}, #{rejectReason,jdbcType=VARCHAR}, 
      #{activeType,jdbcType=INTEGER}, #{activeReason,jdbcType=VARCHAR}, #{collectType,jdbcType=INTEGER}, 
      #{toSpecial,jdbcType=INTEGER}, #{activeStatus,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createUserIdentity,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyUser,jdbcType=VARCHAR}, 
      #{modifyUserIdentity,jdbcType=SMALLINT}, #{modifyTime,jdbcType=TIMESTAMP}, #{deleteFlg,jdbcType=SMALLINT}, 
      #{version,jdbcType=INTEGER}, #{lockUserid,jdbcType=VARCHAR}, #{certStatus,jdbcType=INTEGER}, 
      #{lockTime,jdbcType=TIMESTAMP}, #{structure,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dlfc.zfgj.entity.HouHouseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    insert into hou_house_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="pindex != null">
        PINDEX,
      </if>
      <if test="source != null">
        SOURCE,
      </if>
      <if test="no != null">
        NO,
      </if>
      <if test="eid != null">
        EID,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="uid != null">
        UID,
      </if>
      <if test="beid != null">
        BEID,
      </if>
      <if test="baseId != null">
        BASE_ID,
      </if>
      <if test="province != null">
        PROVINCE,
      </if>
      <if test="city != null">
        CITY,
      </if>
      <if test="district != null">
        DISTRICT,
      </if>
      <if test="road != null">
        ROAD,
      </if>
      <if test="number != null">
        NUMBER,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="floor != null">
        FLOOR,
      </if>
      <if test="door != null">
        DOOR,
      </if>
      <if test="buildingNo != null">
        BUILDING_NO,
      </if>
      <if test="houseAddr != null">
        HOUSE_ADDR,
      </if>
      <if test="propertyIdType != null">
        PROPERTY_ID_TYPE,
      </if>
      <if test="propertyIdNo != null">
        PROPERTY_ID_NO,
      </if>
      <if test="buildingArea != null">
        BUILDING_AREA,
      </if>
      <if test="lockStatus != null">
        LOCK_STATUS,
      </if>
      <if test="lockType != null">
        LOCK_TYPE,
      </if>
      <if test="lockReason != null">
        LOCK_REASON,
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS,
      </if>
      <if test="rejectType != null">
        REJECT_TYPE,
      </if>
      <if test="rejectReason != null">
        REJECT_REASON,
      </if>
      <if test="activeType != null">
        ACTIVE_TYPE,
      </if>
      <if test="activeReason != null">
        ACTIVE_REASON,
      </if>
      <if test="collectType != null">
        COLLECT_TYPE,
      </if>
      <if test="toSpecial != null">
        TO_SPECIAL,
      </if>
      <if test="activeStatus != null">
        ACTIVE_STATUS,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createUserIdentity != null">
        CREATE_USER_IDENTITY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="modifyUser != null">
        MODIFY_USER,
      </if>
      <if test="modifyUserIdentity != null">
        MODIFY_USER_IDENTITY,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="deleteFlg != null">
        DELETE_FLG,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="lockUserid != null">
        LOCK_USERID,
      </if>
      <if test="certStatus != null">
        CERT_STATUS,
      </if>
      <if test="lockTime != null">
        LOCK_TIME,
      </if>
      <if test="structure != null">
        STRUCTURE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pindex != null">
        #{pindex,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="beid != null">
        #{beid,jdbcType=VARCHAR},
      </if>
      <if test="baseId != null">
        #{baseId,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="road != null">
        #{road,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="door != null">
        #{door,jdbcType=VARCHAR},
      </if>
      <if test="buildingNo != null">
        #{buildingNo,jdbcType=VARCHAR},
      </if>
      <if test="houseAddr != null">
        #{houseAddr,jdbcType=VARCHAR},
      </if>
      <if test="propertyIdType != null">
        #{propertyIdType,jdbcType=INTEGER},
      </if>
      <if test="propertyIdNo != null">
        #{propertyIdNo,jdbcType=VARCHAR},
      </if>
      <if test="buildingArea != null">
        #{buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="lockStatus != null">
        #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="lockType != null">
        #{lockType,jdbcType=INTEGER},
      </if>
      <if test="lockReason != null">
        #{lockReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="rejectType != null">
        #{rejectType,jdbcType=INTEGER},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="activeType != null">
        #{activeType,jdbcType=INTEGER},
      </if>
      <if test="activeReason != null">
        #{activeReason,jdbcType=VARCHAR},
      </if>
      <if test="collectType != null">
        #{collectType,jdbcType=INTEGER},
      </if>
      <if test="toSpecial != null">
        #{toSpecial,jdbcType=INTEGER},
      </if>
      <if test="activeStatus != null">
        #{activeStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserIdentity != null">
        #{createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserIdentity != null">
        #{modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="lockUserid != null">
        #{lockUserid,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="lockTime != null">
        #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="structure != null">
        #{structure,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlfc.zfgj.entity.HouHouseInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    select count(*) from hou_house_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    update hou_house_info
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.pindex != null">
        PINDEX = #{record.pindex,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        SOURCE = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        NO = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.eid != null">
        EID = #{record.eid,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        UID = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.beid != null">
        BEID = #{record.beid,jdbcType=VARCHAR},
      </if>
      <if test="record.baseId != null">
        BASE_ID = #{record.baseId,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        PROVINCE = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        DISTRICT = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.road != null">
        ROAD = #{record.road,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        NUMBER = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null">
        FLOOR = #{record.floor,jdbcType=VARCHAR},
      </if>
      <if test="record.door != null">
        DOOR = #{record.door,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingNo != null">
        BUILDING_NO = #{record.buildingNo,jdbcType=VARCHAR},
      </if>
      <if test="record.houseAddr != null">
        HOUSE_ADDR = #{record.houseAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyIdType != null">
        PROPERTY_ID_TYPE = #{record.propertyIdType,jdbcType=INTEGER},
      </if>
      <if test="record.propertyIdNo != null">
        PROPERTY_ID_NO = #{record.propertyIdNo,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingArea != null">
        BUILDING_AREA = #{record.buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="record.lockStatus != null">
        LOCK_STATUS = #{record.lockStatus,jdbcType=INTEGER},
      </if>
      <if test="record.lockType != null">
        LOCK_TYPE = #{record.lockType,jdbcType=INTEGER},
      </if>
      <if test="record.lockReason != null">
        LOCK_REASON = #{record.lockReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        AUDIT_STATUS = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.rejectType != null">
        REJECT_TYPE = #{record.rejectType,jdbcType=INTEGER},
      </if>
      <if test="record.rejectReason != null">
        REJECT_REASON = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.activeType != null">
        ACTIVE_TYPE = #{record.activeType,jdbcType=INTEGER},
      </if>
      <if test="record.activeReason != null">
        ACTIVE_REASON = #{record.activeReason,jdbcType=VARCHAR},
      </if>
      <if test="record.collectType != null">
        COLLECT_TYPE = #{record.collectType,jdbcType=INTEGER},
      </if>
      <if test="record.toSpecial != null">
        TO_SPECIAL = #{record.toSpecial,jdbcType=INTEGER},
      </if>
      <if test="record.activeStatus != null">
        ACTIVE_STATUS = #{record.activeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserIdentity != null">
        CREATE_USER_IDENTITY = #{record.createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUser != null">
        MODIFY_USER = #{record.modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserIdentity != null">
        MODIFY_USER_IDENTITY = #{record.modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlg != null">
        DELETE_FLG = #{record.deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.lockUserid != null">
        LOCK_USERID = #{record.lockUserid,jdbcType=VARCHAR},
      </if>
      <if test="record.certStatus != null">
        CERT_STATUS = #{record.certStatus,jdbcType=INTEGER},
      </if>
      <if test="record.lockTime != null">
        LOCK_TIME = #{record.lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.structure != null">
        STRUCTURE = #{record.structure,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    update hou_house_info
    set ID = #{record.id,jdbcType=VARCHAR},
      PINDEX = #{record.pindex,jdbcType=INTEGER},
      SOURCE = #{record.source,jdbcType=INTEGER},
      NO = #{record.no,jdbcType=VARCHAR},
      EID = #{record.eid,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      UID = #{record.uid,jdbcType=VARCHAR},
      BEID = #{record.beid,jdbcType=VARCHAR},
      BASE_ID = #{record.baseId,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      DISTRICT = #{record.district,jdbcType=VARCHAR},
      ROAD = #{record.road,jdbcType=VARCHAR},
      NUMBER = #{record.number,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      FLOOR = #{record.floor,jdbcType=VARCHAR},
      DOOR = #{record.door,jdbcType=VARCHAR},
      BUILDING_NO = #{record.buildingNo,jdbcType=VARCHAR},
      HOUSE_ADDR = #{record.houseAddr,jdbcType=VARCHAR},
      PROPERTY_ID_TYPE = #{record.propertyIdType,jdbcType=INTEGER},
      PROPERTY_ID_NO = #{record.propertyIdNo,jdbcType=VARCHAR},
      BUILDING_AREA = #{record.buildingArea,jdbcType=DECIMAL},
      LOCK_STATUS = #{record.lockStatus,jdbcType=INTEGER},
      LOCK_TYPE = #{record.lockType,jdbcType=INTEGER},
      LOCK_REASON = #{record.lockReason,jdbcType=VARCHAR},
      AUDIT_STATUS = #{record.auditStatus,jdbcType=INTEGER},
      REJECT_TYPE = #{record.rejectType,jdbcType=INTEGER},
      REJECT_REASON = #{record.rejectReason,jdbcType=VARCHAR},
      ACTIVE_TYPE = #{record.activeType,jdbcType=INTEGER},
      ACTIVE_REASON = #{record.activeReason,jdbcType=VARCHAR},
      COLLECT_TYPE = #{record.collectType,jdbcType=INTEGER},
      TO_SPECIAL = #{record.toSpecial,jdbcType=INTEGER},
      ACTIVE_STATUS = #{record.activeStatus,jdbcType=INTEGER},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_USER_IDENTITY = #{record.createUserIdentity,jdbcType=SMALLINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MODIFY_USER = #{record.modifyUser,jdbcType=VARCHAR},
      MODIFY_USER_IDENTITY = #{record.modifyUserIdentity,jdbcType=SMALLINT},
      MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      DELETE_FLG = #{record.deleteFlg,jdbcType=SMALLINT},
      VERSION = #{record.version,jdbcType=INTEGER},
      LOCK_USERID = #{record.lockUserid,jdbcType=VARCHAR},
      CERT_STATUS = #{record.certStatus,jdbcType=INTEGER},
      LOCK_TIME = #{record.lockTime,jdbcType=TIMESTAMP},
      STRUCTURE = #{record.structure,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlfc.zfgj.entity.HouHouseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    update hou_house_info
    <set>
      <if test="pindex != null">
        PINDEX = #{pindex,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        SOURCE = #{source,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        NO = #{no,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        EID = #{eid,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        UID = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="beid != null">
        BEID = #{beid,jdbcType=VARCHAR},
      </if>
      <if test="baseId != null">
        BASE_ID = #{baseId,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        PROVINCE = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        DISTRICT = #{district,jdbcType=VARCHAR},
      </if>
      <if test="road != null">
        ROAD = #{road,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        NUMBER = #{number,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        FLOOR = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="door != null">
        DOOR = #{door,jdbcType=VARCHAR},
      </if>
      <if test="buildingNo != null">
        BUILDING_NO = #{buildingNo,jdbcType=VARCHAR},
      </if>
      <if test="houseAddr != null">
        HOUSE_ADDR = #{houseAddr,jdbcType=VARCHAR},
      </if>
      <if test="propertyIdType != null">
        PROPERTY_ID_TYPE = #{propertyIdType,jdbcType=INTEGER},
      </if>
      <if test="propertyIdNo != null">
        PROPERTY_ID_NO = #{propertyIdNo,jdbcType=VARCHAR},
      </if>
      <if test="buildingArea != null">
        BUILDING_AREA = #{buildingArea,jdbcType=DECIMAL},
      </if>
      <if test="lockStatus != null">
        LOCK_STATUS = #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="lockType != null">
        LOCK_TYPE = #{lockType,jdbcType=INTEGER},
      </if>
      <if test="lockReason != null">
        LOCK_REASON = #{lockReason,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        AUDIT_STATUS = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="rejectType != null">
        REJECT_TYPE = #{rejectType,jdbcType=INTEGER},
      </if>
      <if test="rejectReason != null">
        REJECT_REASON = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="activeType != null">
        ACTIVE_TYPE = #{activeType,jdbcType=INTEGER},
      </if>
      <if test="activeReason != null">
        ACTIVE_REASON = #{activeReason,jdbcType=VARCHAR},
      </if>
      <if test="collectType != null">
        COLLECT_TYPE = #{collectType,jdbcType=INTEGER},
      </if>
      <if test="toSpecial != null">
        TO_SPECIAL = #{toSpecial,jdbcType=INTEGER},
      </if>
      <if test="activeStatus != null">
        ACTIVE_STATUS = #{activeStatus,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserIdentity != null">
        CREATE_USER_IDENTITY = #{createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        MODIFY_USER = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserIdentity != null">
        MODIFY_USER_IDENTITY = #{modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        DELETE_FLG = #{deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="lockUserid != null">
        LOCK_USERID = #{lockUserid,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        CERT_STATUS = #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="lockTime != null">
        LOCK_TIME = #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="structure != null">
        STRUCTURE = #{structure,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlfc.zfgj.entity.HouHouseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 18 13:50:33 CST 2016.
    -->
    update hou_house_info
    set PINDEX = #{pindex,jdbcType=INTEGER},
      SOURCE = #{source,jdbcType=INTEGER},
      NO = #{no,jdbcType=VARCHAR},
      EID = #{eid,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      UID = #{uid,jdbcType=VARCHAR},
      BEID = #{beid,jdbcType=VARCHAR},
      BASE_ID = #{baseId,jdbcType=VARCHAR},
      PROVINCE = #{province,jdbcType=VARCHAR},
      CITY = #{city,jdbcType=VARCHAR},
      DISTRICT = #{district,jdbcType=VARCHAR},
      ROAD = #{road,jdbcType=VARCHAR},
      NUMBER = #{number,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      FLOOR = #{floor,jdbcType=VARCHAR},
      DOOR = #{door,jdbcType=VARCHAR},
      BUILDING_NO = #{buildingNo,jdbcType=VARCHAR},
      HOUSE_ADDR = #{houseAddr,jdbcType=VARCHAR},
      PROPERTY_ID_TYPE = #{propertyIdType,jdbcType=INTEGER},
      PROPERTY_ID_NO = #{propertyIdNo,jdbcType=VARCHAR},
      BUILDING_AREA = #{buildingArea,jdbcType=DECIMAL},
      LOCK_STATUS = #{lockStatus,jdbcType=INTEGER},
      LOCK_TYPE = #{lockType,jdbcType=INTEGER},
      LOCK_REASON = #{lockReason,jdbcType=VARCHAR},
      AUDIT_STATUS = #{auditStatus,jdbcType=INTEGER},
      REJECT_TYPE = #{rejectType,jdbcType=INTEGER},
      REJECT_REASON = #{rejectReason,jdbcType=VARCHAR},
      ACTIVE_TYPE = #{activeType,jdbcType=INTEGER},
      ACTIVE_REASON = #{activeReason,jdbcType=VARCHAR},
      COLLECT_TYPE = #{collectType,jdbcType=INTEGER},
      TO_SPECIAL = #{toSpecial,jdbcType=INTEGER},
      ACTIVE_STATUS = #{activeStatus,jdbcType=INTEGER},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_USER_IDENTITY = #{createUserIdentity,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_USER = #{modifyUser,jdbcType=VARCHAR},
      MODIFY_USER_IDENTITY = #{modifyUserIdentity,jdbcType=SMALLINT},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      DELETE_FLG = #{deleteFlg,jdbcType=SMALLINT},
      VERSION = #{version,jdbcType=INTEGER},
      LOCK_USERID = #{lockUserid,jdbcType=VARCHAR},
      CERT_STATUS = #{certStatus,jdbcType=INTEGER},
      LOCK_TIME = #{lockTime,jdbcType=TIMESTAMP},
      STRUCTURE = #{structure,jdbcType=INTEGER}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap id="houseResultMap" type="com.dlfc.zfgj.entity.HouHouseInfo">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="LID" jdbcType="VARCHAR" property="lid" />
		<result column="COLLECT_COUNT" jdbcType="VARCHAR" property="collectCount" />
		<result column="FRESH_TIME" jdbcType="INTEGER" property="freshTime" />
		<result column="BASE_ID" jdbcType="VARCHAR" property="baseId" />
		<association column="LID" property="houLeaseRoomInfo" select="com.dlfc.zfgj.mapper.HouLeaseRoomInfoMapper.findByLesId" />
		<association column="LID" property="sysInfoAtt" select="com.dlfc.zfgj.mapper.SysInfoAttMapper.findLeaseAtt" />
		<association column="BASE_ID" property="usrUser" select="com.dlfc.zfgj.mapper.UsrUserMapper.getUerUserList" />
		<association column="BASE_ID" property="usrUserCount" select="com.dlfc.zfgj.mapper.UsrUserMapper.getUerUserCount" />
	</resultMap>

	<resultMap id="cohouseResultMap" type="com.dlfc.zfgj.entity.HouHouseInfo">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="REJECT_REASON" jdbcType="VARCHAR" property="rejectReason" />
		<association column="ID" property="owners" select="com.dlfc.zfgj.mapper.HouCoOwnerMapper.findCoOwner" />
	</resultMap>
	
	<select id="selectHouseInfoCount" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="int" useCache="false">
		SELECT count(1) FROM
			(
			<!-- 认领房源
			SELECT
				A.ID,
				A.NO,
				A.CREATE_TIME,
				A.HOUSE_ADDR,
				A.PROPERTY_ID_TYPE,
				(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_id_type' AND CODE = A.PROPERTY_ID_TYPE) PROPERTY_ID_TYPE_NAME,
				'' CERT_STATUS,
				'' BEID,
				'' EID,
				'' AUDIT_STATUS,
				A.BUILDING_AREA,
				'' HOUSE_BEID,
				null END_TIME,
				'' COLLECT_TYPE,
				A.CONTRACT_FLAG CONTRACT_STATUS,
				'' RELEASE_STATUS,
				'' RENT,
				'' LID,
				'' TITLE,
				'' COLLECT_COUNT,
				'' BASE_ID,
				null FRESH_TIME,
				'' LOCK_STATUS ,
				'' LOCK_REASON,
				HHI.ACTIVE_STATUS,
				'' ACTIVE_REASON,
				HHI.UID,
				'' ROOM_COUNT,
				HHI.AUDIT_STATUS leaseAuditStatus,
				'' LEASE_MODE,
				HHI.SOURCE,
				'6' lol
			FROM
				HOU_HOUSE_BASEINFO A
			INNER JOIN HOU_CO_OWNER H ON A.ID = H.BASE_ID
			LEFT JOIN HOU_HOUSE_INFO HHI ON A.ID = HHI.BASE_ID
			WHERE
				H.CO_PID = #{eid} AND H.DELETE_FLG = 0 AND A.DELETE_FLG = 0
				AND A.ID NOT IN (SELECT DEL_ID FROM USR_DEL_INFO U WHERE U.UEP_ID = #{uid}
			排除被认领过的房源
			UNION 
				SELECT
				BASE_ID from HOU_HOUSE_INFO WHERE DELETE_FLG = 0
			AND UID = #{uid} and BASE_ID is not null
			排除被认领过的房源 
				)
				  and HHI.BASE_ID = ''
				AND HHI.UID IS NULL OR HHI.UID != #{uid}) 用于判断是否是合同系统自己的房源
				
			UNION -->
			
			SELECT
				A.ID,
				A.NO NO,
				A.CREATE_TIME,
				A.HOUSE_ADDR,
				A.PROPERTY_ID_TYPE,
				(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_id_type' AND CODE = A.PROPERTY_ID_TYPE) PROPERTY_ID_TYPE_NAME,
				A.CERT_STATUS,
				A.BEID,
				A.EID,
				A.AUDIT_STATUS,
				A.BUILDING_AREA,
				A.BEID HOUSE_BEID,
				(SELECT MAX(CC.END_TIME) FROM CON_CONTRACT CC WHERE CC.DELETE_FLG != 1 AND CC.HID = A.ID AND CC.STATUS NOT IN (8,11)  LIMIT 0,1) END_TIME,
				A.COLLECT_TYPE,
				(SELECT HB.CONTRACT_FLAG FROM HOU_HOUSE_BASEINFO HB WHERE HB.ID = A.BASE_ID AND HB.DELETE_FLG = 0) CONTRACT_STATUS,
				L.RELEASE_STATUS,
				L.RENT,
				L.ID LID,
				<!-- 如果标题为空 则取得商圈+小区+户型+面积+整租/合租为标题 -->
				(CASE WHEN (L.TITLE IS NULL OR L.TITLE = '') THEN (
					CONCAT(l.DISTRICT_NAME,' ',
					(case when (l.VILLAGE_NAME is null or l.VILLAGE_NAME = '') THEN '' ELSE CONCAT(l.VILLAGE_NAME,' ') END),
					SUBSTRING_INDEX(L.APARTMENT_LAYOUT,',', 1) ,'室',
					SUBSTRING(L.APARTMENT_LAYOUT,3,1) ,'厅',
					SUBSTRING_INDEX(L.APARTMENT_LAYOUT,',', -1) ,'卫 ',
					SUBSTRING_INDEX(a.BUILDING_AREA,'.', 1) ,'平 ',
					(CASE l.LEASE_MODE WHEN '1' THEN '整租' ELSE  '合租' END)
					) 
				) ELSE  L.TITLE END) TITLE,
				<!-- 如果标题为空 则取得商圈+小区+户型+面积+整租/合租为标题 -->
			
				(SELECT COUNT(1) COUNT FROM USR_HOU_COLLECTION WHERE HID = A.ID ) COLLECT_COUNT,
				A.BASE_ID,
				(UNIX_TIMESTAMP(SYSDATE()) -	UNIX_TIMESTAMP(L.FRESH_TIME)) FRESH_TIME,
				A.LOCK_STATUS,
				A.LOCK_REASON,
				A.ACTIVE_STATUS,
				A.ACTIVE_REASON,
				A.UID,
				(SELECT COUNT(1) COUNT FROM HOU_LEASE_ROOM_INFO R WHERE R.LEASEID = L.ID AND R.`STATUS` = 0 AND R.DELETE_FLG = 0) ROOM_COUNT,
				L.AUDIT_STATUS leaseAuditStatus,
				L.LEASE_MODE,
				A.SOURCE,
				'7' lol
			FROM
				HOU_HOUSE_INFO A
			LEFT JOIN HOU_LEASE_INFO L ON A.ID = L.HID
			WHERE
				A.DELETE_FLG = 0 AND A.UID = #{uid} AND (a.SOURCE in (1, 4) OR a.SOURCE = 3 AND a.AUDIT_STATUS=2)
		) A
		WHERE 1 = 1
		<if test="activeStatus != null and activeStatus == 1">
			AND A.COLLECT_TYPE = 1
		</if>
		
		
		
	</select>
	
	<!-- 展示 -->
	<select id="selectHouseInfoList" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultMap="houseResultMap" useCache="false">
		SELECT A.* FROM
			(
			SELECT
				A.ID,
				A.NO NO,
				A.CREATE_TIME,
				A.HOUSE_ADDR,
				A.PROPERTY_ID_TYPE,
				(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_id_type' AND CODE = A.PROPERTY_ID_TYPE) PROPERTY_ID_TYPE_NAME,
				A.CERT_STATUS,
				A.BEID,
				A.EID,
				A.AUDIT_STATUS,
				A.BUILDING_AREA,
				A.BEID HOUSE_BEID,
				(SELECT MAX(CC.END_TIME) FROM CON_CONTRACT CC WHERE CC.DELETE_FLG != 1 AND CC.HID = A.ID AND CC.STATUS NOT IN (8,11)  LIMIT 0,1) END_TIME,
				A.COLLECT_TYPE,
				(SELECT HB.CONTRACT_FLAG FROM HOU_HOUSE_BASEINFO HB WHERE HB.ID = A.BASE_ID AND HB.DELETE_FLG = 0) CONTRACT_STATUS,
				L.RELEASE_STATUS,
				L.RENT,
				L.ID LID,
				<!-- 如果标题为空 则取得商圈+小区+户型+面积+整租/合租为标题 -->
				(CASE WHEN (L.TITLE IS NULL OR L.TITLE = '') THEN (
					CONCAT(l.DISTRICT_NAME,' ',
					(case when (l.VILLAGE_NAME is null or l.VILLAGE_NAME = '') THEN '' ELSE CONCAT(l.VILLAGE_NAME,' ') END),
					SUBSTRING_INDEX(L.APARTMENT_LAYOUT,',', 1) ,'室',
					SUBSTRING(L.APARTMENT_LAYOUT,3,1) ,'厅',
					SUBSTRING_INDEX(L.APARTMENT_LAYOUT,',', -1) ,'卫 ',
					SUBSTRING_INDEX(a.BUILDING_AREA,'.', 1) ,'平 ',
					(CASE l.LEASE_MODE WHEN '1' THEN '整租' ELSE  '合租' END)
					) 
				) ELSE  L.TITLE END) TITLE,
				<!-- 如果标题为空 则取得商圈+小区+户型+面积+整租/合租为标题 -->
			
				(SELECT COUNT(1) COUNT FROM USR_HOU_COLLECTION WHERE HID = A.ID ) COLLECT_COUNT,
				A.BASE_ID,
				(DATE(SYSDATE()) - DATE(l.FRESH_TIME)) FRESH_TIME,
				A.LOCK_STATUS,
				A.LOCK_REASON,
				A.ACTIVE_STATUS,
				A.ACTIVE_REASON,
				A.ACTIVE_TYPE,
				A.UID,
				(SELECT COUNT(1) COUNT FROM HOU_LEASE_ROOM_INFO R WHERE R.LEASEID = L.ID AND R.`STATUS` = 0 AND R.DELETE_FLG = 0) ROOM_COUNT,
				L.AUDIT_STATUS leaseAuditStatus,
				L.LEASE_MODE,
				A.SOURCE,
				'7' lol,
				SC.NAME AS activeDes
			FROM
				HOU_HOUSE_INFO A
			LEFT JOIN HOU_LEASE_INFO L ON A.ID = L.HID
			LEFT JOIN SYS_CODE SC ON SC.code = A.ACTIVE_TYPE AND SC.TYPE = 'reject_check'
			WHERE
				A.DELETE_FLG = 0 AND A.UID = #{uid} AND (a.SOURCE in (1, 4) OR a.SOURCE = 3 AND a.AUDIT_STATUS=2)
		) A
		WHERE 1 = 1
		<if test="activeStatus != null and activeStatus == 1">
			AND A.COLLECT_TYPE = 1
		</if>
		
		<choose>
			<when test="orderBy != null and orderBy != ''">
				order by ${orderBy}
			</when>
			<otherwise>
				order by A.lol,A.CREATE_TIME desc
			</otherwise>
		</choose>
		
	</select>
	
	<!-- 检测证件编号是否存在 -->
	<select id="selectCheckIdNo" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT ID COUNT FROM HOU_HOUSE_INFO 
		WHERE PROPERTY_ID_NO = #{propertyIdNo}
			AND PROPERTY_ID_TYPE = #{propertyIdType} AND ACTIVE_STATUS = 1 AND UID = #{uid} AND DELETE_FLG = 0 LIMIT 0,1
	</select>

	<!-- 检测证件编号是否存在 -->
	<select id="selectCheckAddr" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT ID COUNT FROM HOU_HOUSE_INFO 
		WHERE HOUSE_ADDR = #{houseAddr}
			AND ACTIVE_STATUS = 1 AND DELETE_FLG = 0 AND UID = #{uid} LIMIT 0,1
	</select>
	
	<!-- 展示 -->
	<select id="selectHouseInfo" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultMap="cohouseResultMap" useCache="false">
		SELECT
			A.CERT_STATUS,
			A.ID,
			A.NO,
			A.HOUSE_ADDR,
			A.BUILDING_AREA,
			(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_id_type' AND CODE = A.PROPERTY_ID_TYPE) PROPERTY_ID_TYPE_NAME,
			A.PROPERTY_ID_TYPE,
			(SELECT NAME FROM SYS_CODE WHERE TYPE = 'house_structure' AND CODE = A.STRUCTURE) STRUCTURE_NAME,
			A.STRUCTURE,
			A.PROPERTY_ID_NO,
			A.CITY CITY_NAME,
			(SELECT AREA FROM SYS_AREA_AREAS WHERE AREA_ID = A.DISTRICT) DISTRICT_NAME,	
			A.ROAD,
			A.NUMBER,
			A.UNIT,
			A.FLOOR,
			A.DOOR,
			A.BUILDING_NO,
			AUDIT_STATUS,
			(SELECT REJECT_TYPE FROM HOU_HOUSE_INFO WHERE ID= A.ID AND AUDIT_STATUS = 3 LIMIT 0,1) REJECT_TYPE,
			A.AUDIT_STATUS,
			A.VERSION,
			A.BEID,
			A.BASE_ID,
			(SELECT CERT_FLAG FROM HOU_HOUSE_BASEINFO B WHERE B.ID = A.BASE_ID) CERT_FLAG,
			A.REJECT_REASON
		FROM
			HOU_HOUSE_INFO A 
		WHERE
			A.ID = #{id}
	</select>

	<!-- 编辑房源-保存房源信息到记录表 -->
	<insert flushCache="false" id="saveHouseLog" keyProperty="houseLogId" parameterType="com.dlfc.zfgj.entity.HouHouseInfoLog" useGeneratedKeys="true">
		INSERT INTO HOU_HOUSE_INFO_LOG (
			ID,
			HID,
			NO,
			BEID,
			PROPERTY_ID_TYPE,
			PROPERTY_ID_NO,
			CITY,
			DISTRICT,
			ROAD,
			NUMBER,
			UNIT,
			FLOOR,
			DOOR,
			BUILDING_NO,
			BUILDING_AREA,
			CERT_STATUS,
			ACTIVE_STATUS,
			OPERATOR,
			OPT_TIME,
			OPT_EVENT,
			DCRP,
			CREATE_USER,
			CREATE_USER_IDENTITY,
			CREATE_TIME,
			MODIFY_USER,
			MODIFY_USER_IDENTITY,
			MODIFY_TIME,
			DELETE_FLG,
			VERSION
		) SELECT
			#{id},A.*, #{createUser},
			SYSDATE(),
			#{optEvent},#{dcrp}
			,
			#{createUser},
			#{createUserIdentity},
			SYSDATE(),
			#{createUser},
			#{createUserIdentity},
			SYSDATE(),
			0,
			0
		FROM
			(
				SELECT
					ID,
					NO,
					BEID,
					PROPERTY_ID_TYPE,
					PROPERTY_ID_NO,
					CITY,
					DISTRICT,
					ROAD,
					NUMBER,
					UNIT,
					FLOOR,
					DOOR,
					BUILDING_NO,
					BUILDING_AREA,
					CERT_STATUS,
					ACTIVE_STATUS
				FROM
					HOU_HOUSE_INFO
				WHERE
					ID = #{hid}
		) A	
	</insert>

	<!-- 检测共有人是否存在 -->
	<select id="checkPerson" parameterType="map" resultType="string" useCache="false">
		SELECT ID FROM SYS_PERSON WHERE NAME = #{name} AND ID_TYPE =
		#{type} AND ID_NO = #{code}
	</select>

	<!-- 删除检测=检测房源是否在合同表存在 -->
	<select id="delCheck" parameterType="string" resultMap="houseResultMap" useCache="false">
		SELECT 
			A.EID,A.AUDIT_STATUS,A.LOCK_STATUS
		FROM HOU_HOUSE_INFO A 
		WHERE A.ID = #{hid}
	</select>

	<select id="findNotConList" parameterType="string" resultType="com.dlfc.zfgj.entity.HouHouseInfo" useCache="false">
		SELECT
			H.ID,
			CONCAT((SELECT CITY FROM SYS_AREA_CITIES WHERE CITY_ID = H.CITY),' ',(SELECT AREA FROM SYS_AREA_AREAS WHERE AREA_ID = H.DISTRICT),' ',H.ROAD,'路/街 ',H.NUMBER,'号 ',H.UNIT,'单元 ',H.FLOOR,'层',H.DOOR,'室') AS houseAddr,
			H.CERT_STATUS AS certifyStatus
		FROM HOU_HOUSE_INFO H
		WHERE H.DELETE_FLG = 0
		AND H.ACTIVE_STATUS = 1
		AND H.AUDIT_STATUS = 2
		AND H.DELETE_FLG = 0
		AND H.BEID = #{pid}
		GROUP BY H.ID
		<!-- AND ((H.AGENT_STATUS = 0 AND H.BEID = 1) OR ( H.AGENT_STATUS = 1 AND A.AGENT_PID = 1))
		AND ( NOT EXISTS (SELECT CC.HID FROM CON_CONTRACT CC WHERE CC.HID = H.ID AND CC.STATUS IN (2,3,4,5) AND CC.RENTAL_MODE = 1))
		AND ( (SELECT IFNULL(SUM(CC.LEASE_AREA), 0) FROM CON_CONTRACT CC WHERE CC.HID = H.ID AND CC.STATUS IN (2,3,4,5) AND CC.RENTAL_MODE = 2) < (H.BUILDING_AREA * 0.6 )); -->
	</select>
	
	<select id="findOne" parameterType="string" resultType="com.dlfc.zfgj.entity.HouHouseInfo" useCache="false">
		SELECT
			H.ID,
			H.CERT_STATUS AS certifyStatus
		FROM HOU_HOUSE_INFO H
		WHERE H.ID = #{hid}
	</select>
	
	<select id="getHouseInfo" parameterType="string" resultType="com.dlfc.zfgj.entity.HouHouseInfo" useCache="false">
		SELECT
			H.ID AS id,
			CONCAT((SELECT CITY FROM SYS_AREA_CITIES WHERE CITY_ID = H.CITY),' ',(SELECT AREA FROM SYS_AREA_AREAS WHERE AREA_ID = H.DISTRICT),' ',H.ROAD,'路/街 ',H.NUMBER,'号 ',H.UNIT,'单元 ',H.FLOOR,'层',H.DOOR,'室') AS houseAddr,
			(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_id_type' AND CODE = H.PROPERTY_ID_TYPE) propertyIdTypeName,
			H.PROPERTY_ID_TYPE AS propertyIdType,
			H.BUILDING_AREA AS buildingArea,
			A.AGENT_PID AS agentPid,
			A.AGENT_NAME AS agentName,
			A.AGENT_ID_TYPE AS agentIdType,
			A.AGENT_ID_NO AS agentIdNo,
			A.AGENT_TEL AS agentTel,
			PP.ID AS ownerPid,
			PP.NAME AS houseOwnerName,
			PP.ID_TYPE AS houseOwnerIdType,
			PP.ID_NO AS houseOwnerIdNo,
			UU.MOBILE AS houseOwnerTel
		FROM HOU_HOUSE_INFO H
		LEFT JOIN HOU_AGENCY_AGREEMENT A ON A.HID = H.ID
		LEFT JOIN SYS_PERSON PP ON PP.ID = H.BEID
		LEFT JOIN USR_USER UU ON UU.PER_ID = PP.ID
		WHERE H.ID = #{hid}
		AND H.DELETE_FLG = 0
		GROUP BY H.ID
	</select>

	<!-- 用id检索 -->
	<select id="findById" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultMap="houseResultMap" useCache="false">
		SELECT
			A.ID,
			A.CERT_STATUS,
			A.STATUS,
			A.BEID,
			CONCAT((SELECT CITY FROM SYS_AREA_CITIES WHERE CITY_ID = H.CITY),(SELECT AREA FROM SYS_AREA_AREAS WHERE AREA_ID = A.DISTRICT),A.ROAD,'路/街',A.NUMBER,'号 ',A.UNIT,'单元',A.FLOOR,'层',A.DOOR,'室') HOUSE_ADDR,
			A.BUILDING_AREA,
			A.PROPERTY_ID_TYPE,
			(SELECT NAME FROM SYS_CODE WHERE TYPE = 'property_type' AND CODE = A.PROPERTY_TYPE) PROPERTY_TYPE_NAME,
			A.PROPERTY_ID_NO,
			A.CITY	CITY_NAME,
			A.DISTRICT DISTRICT_NAME,
			A.ROAD,
			A.NUMBER,
			A.UNIT,
			A.FLOOR,	
			A.DOOR,
			A.VERSION,
			(SELECT REFUSE_REASON FROM HOU_AGENCY_AGREEMENT WHERE HID = A.ID AND REFUSE_REASON IS NOT NULL ORDER BY MODIFY_TIME DESC LIMIT 0,1) REFUSE_REASON
		FROM HOU_HOUSE_INFO A 
		WHERE A.DELETE_FLG = 0
		AND A.ID = ${id}
	</select>
	
	<!-- 获取房源审核状态 -->
	<select id="getHouseAduitStatus" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT
			A.AUDIT_STATUS
		FROM
			HOU_HOUSE_INFO A 
		WHERE 
			A.DELETE_FLG = 0
			AND A.PROPERTY_ID_NO = #{propertyIdNo}
			AND A.PROPERTY_ID_TYPE = #{propertyIdType} AND A.STATUS = 1
			LIMIT 0,1
	</select>
	
	<!-- 检测是否可以保存 -->
	<select id="isCanDoSave" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT
			B.AGENT_PID
		FROM
			HOU_HOUSE_INFO A,
			HOU_AGENCY_AGREEMENT B
		WHERE
			A.ID = B.HID AND B.`STATUS` IN (1,4,5)
			AND A.DELETE_FLG = 0 AND A.ON_DEL_FLG = 0
			AND A.PROPERTY_ID_NO = #{propertyIdNo}
			AND A.PROPERTY_ID_TYPE = #{propertyIdType} AND A.STATUS = 1 AND A.DELETE_FLG = 0 LIMIT 0,1
	</select>
	
	<!-- 获取房主ID -->
	<select id="getOwnerPid" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT BEID COUNT FROM HOU_HOUSE_INFO WHERE ID = #{id}
	</select>
	
	<!-- 检测版本 -->
	<select id="checkVersion" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultType="string" useCache="false">
		SELECT COUNT(1) FROM HOU_HOUSE_INFO WHERE ID = #{id} AND VERSION = #{version}
	</select>
	
	<select id="findList" parameterType="string" resultType="com.dlfc.zfgj.entity.HouHouseInfo" useCache="false">
		SELECT
			H.ID AS id,
			H.HOUSE_ADDR AS houseAddr,
			CASE WHEN L.VILLAGE_NAME IS NULL THEN CONCAT(H.ROAD,' ',H.NUMBER) ELSE CONCAT(L.VILLAGE_NAME,' ', CASE WHEN L.NO = '' THEN '' ELSE  CONCAT(L.NO,'号楼') END ) END AS estate,
			H.CERT_STATUS AS certifyStatus,
			H.BUILDING_AREA AS buildingArea
		FROM HOU_HOUSE_INFO H 
		LEFT JOIN HOU_LEASE_INFO L ON H.ID = L.HID
		LEFT JOIN HOU_HOUSE_BASEINFO B ON B.ID = H.BASE_ID
		WHERE H.DELETE_FLG = 0
		AND H.ACTIVE_STATUS = 1
		AND H.AUDIT_STATUS = 2
		AND H.BEID = #{eid}
	</select>
	
	<resultMap id="112tMap" type="com.dlfc.zfgj.entity.HouHouseInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PINDEX" jdbcType="INTEGER" property="pindex" />
    <result column="NO" jdbcType="VARCHAR" property="no" />
    <result column="EID" jdbcType="VARCHAR" property="eid" />
    <result column="BEID" jdbcType="VARCHAR" property="beid" />
    <result column="BASE_ID" jdbcType="VARCHAR" property="baseId" />
    <result column="PROVINCE" jdbcType="VARCHAR" property="province" />
    <result column="CITY" jdbcType="VARCHAR" property="city" />
    <result column="DISTRICT" jdbcType="VARCHAR" property="district" />
    <result column="ROAD" jdbcType="VARCHAR" property="road" />
    <result column="NUMBER" jdbcType="VARCHAR" property="number" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="FLOOR" jdbcType="VARCHAR" property="floor" />
    <result column="DOOR" jdbcType="VARCHAR" property="door" />
    <result column="TO_SPECIAL" jdbcType="INTEGER" property="toSpecial" />
    <result column="BUILDING_NO" jdbcType="VARCHAR" property="buildingNo" />
    <result column="HOUSE_ADDR" jdbcType="VARCHAR" property="houseAddr" />
    <result column="PROPERTY_ID_TYPE" jdbcType="INTEGER" property="propertyIdType" />
    <result column="PROPERTY_ID_NO" jdbcType="VARCHAR" property="propertyIdNo" />
    <result column="BUILDING_AREA" jdbcType="DECIMAL" property="buildingArea" />
    <result column="LOCK_STATUS" jdbcType="INTEGER" property="lockStatus" />
    <result column="LOCK_TYPE" jdbcType="INTEGER" property="lockType" />
    <result column="LOCK_REASON" jdbcType="CHAR" property="lockReason" />
    <result column="AUDIT_STATUS" jdbcType="INTEGER" property="auditStatus" />
    <result column="REJECT_TYPE" jdbcType="INTEGER" property="rejectType" />
    <result column="REJECT_REASON" jdbcType="VARCHAR" property="rejectReason" />
    <result column="ACTIVE_STATUS" jdbcType="INTEGER" property="activeStatus" />
    <result column="ACTIVE_TYPE" jdbcType="INTEGER" property="activeType" />
    <result column="ACTIVE_REASON" jdbcType="VARCHAR" property="activeReason" />
    <result column="COLLECT_TYPE" jdbcType="INTEGER" property="collectType" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT" property="createUserIdentity" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
    <result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT" property="modifyUserIdentity" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="LOCK_USERID" jdbcType="VARCHAR" property="lockUserid" />
    <result column="CERT_STATUS" jdbcType="INTEGER" property="certStatus" />
    <result column="LOCK_TIME" jdbcType="TIMESTAMP" property="lockTime" />
    <association column="ID" property="com.dlfc.zfgj.entity.HouLeaseInfo" select="com.dlfc.zfgj.mapper.HouLeaseInfoMapper.findByHid" />
  </resultMap>
  
  <sql id="Hou_Column_List">
    ID, PINDEX, NO, UID, EID, BEID, BASE_ID, PHONE, PROVINCE, CITY, DISTRICT, ROAD, NUMBER, 
    UNIT, FLOOR, DOOR, TO_SPECIAL, BUILDING_NO, HOUSE_ADDR, PROPERTY_ID_TYPE, PROPERTY_ID_NO, 
    BUILDING_AREA, LOCK_STATUS, LOCK_TYPE, LOCK_REASON, AUDIT_STATUS, REJECT_TYPE, REJECT_REASON, 
    ACTIVE_STATUS, ACTIVE_TYPE, ACTIVE_REASON, COLLECT_TYPE, CREATE_USER, CREATE_USER_IDENTITY, 
    CREATE_TIME, MODIFY_USER, MODIFY_USER_IDENTITY, MODIFY_TIME, DELETE_FLG, VERSION, 
    LOCK_USERID, CERT_STATUS, LOCK_TIME,STRUCTURE
  </sql>
  
    <resultMap id="HouinfoResultMap" type="com.dlfc.zfgj.entity.HouHouseInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PINDEX" jdbcType="INTEGER" property="pindex" />
    <result column="NO" jdbcType="VARCHAR" property="no" />
    <result column="UID" jdbcType="VARCHAR" property="uid" />
    <result column="EID" jdbcType="VARCHAR" property="eid" />
    <result column="BEID" jdbcType="VARCHAR" property="beid" />
    <result column="BASE_ID" jdbcType="VARCHAR" property="baseId" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="PROVINCE" jdbcType="VARCHAR" property="province" />
    <result column="CITY" jdbcType="VARCHAR" property="city" />
    <result column="DISTRICT" jdbcType="VARCHAR" property="district" />
    <result column="ROAD" jdbcType="VARCHAR" property="road" />
    <result column="NUMBER" jdbcType="VARCHAR" property="number" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="FLOOR" jdbcType="VARCHAR" property="floor" />
    <result column="DOOR" jdbcType="VARCHAR" property="door" />
    <result column="TO_SPECIAL" jdbcType="INTEGER" property="toSpecial" />
    <result column="BUILDING_NO" jdbcType="VARCHAR" property="buildingNo" />
    <result column="HOUSE_ADDR" jdbcType="VARCHAR" property="houseAddr" />
    <result column="PROPERTY_ID_TYPE" jdbcType="INTEGER" property="propertyIdType" />
    <result column="PROPERTY_ID_NO" jdbcType="VARCHAR" property="propertyIdNo" />
    <result column="BUILDING_AREA" jdbcType="DECIMAL" property="buildingArea" />
    <result column="LOCK_STATUS" jdbcType="INTEGER" property="lockStatus" />
    <result column="LOCK_TYPE" jdbcType="INTEGER" property="lockType" />
    <result column="LOCK_REASON" jdbcType="CHAR" property="lockReason" />
    <result column="AUDIT_STATUS" jdbcType="INTEGER" property="auditStatus" />
    <result column="REJECT_TYPE" jdbcType="INTEGER" property="rejectType" />
    <result column="REJECT_REASON" jdbcType="VARCHAR" property="rejectReason" />
    <result column="ACTIVE_STATUS" jdbcType="INTEGER" property="activeStatus" />
    <result column="ACTIVE_TYPE" jdbcType="INTEGER" property="activeType" />
    <result column="ACTIVE_REASON" jdbcType="VARCHAR" property="activeReason" />
    <result column="COLLECT_TYPE" jdbcType="INTEGER" property="collectType" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT" property="createUserIdentity" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
    <result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT" property="modifyUserIdentity" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="LOCK_USERID" jdbcType="VARCHAR" property="lockUserid" />
    <result column="CERT_STATUS" jdbcType="INTEGER" property="certStatus" />
    <result column="LOCK_TIME" jdbcType="TIMESTAMP" property="lockTime" />
    <result column="STRUCTURE" jdbcType="INTEGER" property="structure" />
    <association column="ID" property="houLeaseInfo" select="com.dlfc.zfgj.mapper.HouLeaseInfoMapper.findByHid" />
    <association column="UID" property="user" select="com.dlfc.zfgj.mapper.UsrUserMapper.findById" />
  </resultMap>
  
  <select id="findHouOne" parameterType="com.dlfc.zfgj.entity.HouHouseInfo" resultMap="HouinfoResultMap" useCache="false">
		SELECT
		<include refid="Hou_Column_List" />
		FROM HOU_HOUSE_INFO
		WHERE ID = #{id,jdbcType=VARCHAR}
		AND DELETE_FLG = 0
	</select>
	
	<!-- 根据id查询base表数据 -->
	<select id="getBaseInfoById" parameterType="string" resultMap="houseResultMap" useCache="false">
		SELECT
		ID, NO, PROVINCE, CITY, DISTRICT, ROAD, NUMBER, UNIT, FLOOR, DOOR, BUILDING_NO, 
    HOUSE_ADDR, PROPERTY_ID_TYPE, PROPERTY_ID_NO, BUILDING_AREA, ACTIVE_STATUS, CERT_FLAG, 
    CONTRACT_FLAG, CREATE_USER, CREATE_USER_IDENTITY, CREATE_TIME, MODIFY_USER, MODIFY_USER_IDENTITY, 
    MODIFY_TIME, DELETE_FLG, VERSION
		FROM HOU_HOUSE_BASEINFO 
		WHERE ID = #{id}
		AND
		DELETE_FLG = 0
	</select>
	
	 <!-- 用id检索 -->
	<select id="findByBaseId" parameterType="String" resultType="String" useCache="false">
	SELECT
	ID
	FROM HOU_HOUSE_INFO
	WHERE DELETE_FLG = 0
	AND BASE_ID = #{baseId}
	</select>
</mapper>