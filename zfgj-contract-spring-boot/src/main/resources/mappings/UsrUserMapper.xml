<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlfc.zfgj.mapper.UsrUserMapper">
  <resultMap id="BaseResultMap" type="com.dlfc.zfgj.entity.UsrUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PER_ID" jdbcType="VARCHAR" property="perId" />
    <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PRO_QUESTION" jdbcType="VARCHAR" property="proQuestion" />
    <result column="PRO_ANSWER" jdbcType="VARCHAR" property="proAnswer" />
    <result column="SECURITY_LEVEL" jdbcType="SMALLINT" property="securityLevel" />
    <result column="DISABLE_FLG" jdbcType="SMALLINT" property="disableFlg" />
    <result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT" property="createUserIdentity" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
    <result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT" property="modifyUserIdentity" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
    <result column="PASSWORD_LEVEL" jdbcType="VARCHAR" property="passwordLevel" />
    <result column="USERNAME_FLAG" jdbcType="BIT" property="usernameFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    ID, PER_ID, MOBILE, EMAIL, PASSWORD, USERNAME, PRO_QUESTION, PRO_ANSWER, SECURITY_LEVEL, 
    DISABLE_FLG, LOGIN_IP, LAST_LOGIN_TIME, CREATE_USER, CREATE_USER_IDENTITY, CREATE_TIME, 
    MODIFY_USER, MODIFY_USER_IDENTITY, MODIFY_TIME, DELETE_FLG, VERSION, PASSWORD_LEVEL, 
    USERNAME_FLAG, USER_IDENTITY
  </sql>
  <select id="selectByExample" parameterType="com.dlfc.zfgj.entity.UsrUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from usr_user
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    delete from usr_user
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlfc.zfgj.entity.UsrUserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    delete from usr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlfc.zfgj.entity.UsrUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    insert into usr_user (ID, PER_ID, MOBILE, 
      EMAIL, PASSWORD, USERNAME, 
      PRO_QUESTION, PRO_ANSWER, SECURITY_LEVEL, 
      DISABLE_FLG, LOGIN_IP, LAST_LOGIN_TIME, 
      CREATE_USER, CREATE_USER_IDENTITY, CREATE_TIME, 
      MODIFY_USER, MODIFY_USER_IDENTITY, MODIFY_TIME, 
      DELETE_FLG, VERSION, PASSWORD_LEVEL, 
      USERNAME_FLAG)
    values (#{id,jdbcType=VARCHAR}, #{perId,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{proQuestion,jdbcType=VARCHAR}, #{proAnswer,jdbcType=VARCHAR}, #{securityLevel,jdbcType=SMALLINT}, 
      #{disableFlg,jdbcType=SMALLINT}, #{loginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{createUserIdentity,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyUser,jdbcType=VARCHAR}, #{modifyUserIdentity,jdbcType=SMALLINT}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{deleteFlg,jdbcType=SMALLINT}, #{version,jdbcType=INTEGER}, #{passwordLevel,jdbcType=VARCHAR}, 
      #{usernameFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.dlfc.zfgj.entity.UsrUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    insert into usr_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="perId != null">
        PER_ID,
      </if>
      <if test="mobile != null">
        MOBILE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="proQuestion != null">
        PRO_QUESTION,
      </if>
      <if test="proAnswer != null">
        PRO_ANSWER,
      </if>
      <if test="securityLevel != null">
        SECURITY_LEVEL,
      </if>
      <if test="disableFlg != null">
        DISABLE_FLG,
      </if>
      <if test="loginIp != null">
        LOGIN_IP,
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createUserIdentity != null">
        CREATE_USER_IDENTITY,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="modifyUser != null">
        MODIFY_USER,
      </if>
      <if test="modifyUserIdentity != null">
        MODIFY_USER_IDENTITY,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="deleteFlg != null">
        DELETE_FLG,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="passwordLevel != null">
        PASSWORD_LEVEL,
      </if>
      <if test="usernameFlag != null">
        USERNAME_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="perId != null">
        #{perId,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="proQuestion != null">
        #{proQuestion,jdbcType=VARCHAR},
      </if>
      <if test="proAnswer != null">
        #{proAnswer,jdbcType=VARCHAR},
      </if>
      <if test="securityLevel != null">
        #{securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="disableFlg != null">
        #{disableFlg,jdbcType=SMALLINT},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserIdentity != null">
        #{createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserIdentity != null">
        #{modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="passwordLevel != null">
        #{passwordLevel,jdbcType=VARCHAR},
      </if>
      <if test="usernameFlag != null">
        #{usernameFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlfc.zfgj.entity.UsrUserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    select count(*) from usr_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    update usr_user
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.perId != null">
        PER_ID = #{record.perId,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.proQuestion != null">
        PRO_QUESTION = #{record.proQuestion,jdbcType=VARCHAR},
      </if>
      <if test="record.proAnswer != null">
        PRO_ANSWER = #{record.proAnswer,jdbcType=VARCHAR},
      </if>
      <if test="record.securityLevel != null">
        SECURITY_LEVEL = #{record.securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="record.disableFlg != null">
        DISABLE_FLG = #{record.disableFlg,jdbcType=SMALLINT},
      </if>
      <if test="record.loginIp != null">
        LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserIdentity != null">
        CREATE_USER_IDENTITY = #{record.createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUser != null">
        MODIFY_USER = #{record.modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserIdentity != null">
        MODIFY_USER_IDENTITY = #{record.modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlg != null">
        DELETE_FLG = #{record.deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.passwordLevel != null">
        PASSWORD_LEVEL = #{record.passwordLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.usernameFlag != null">
        USERNAME_FLAG = #{record.usernameFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    update usr_user
    set ID = #{record.id,jdbcType=VARCHAR},
      PER_ID = #{record.perId,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PRO_QUESTION = #{record.proQuestion,jdbcType=VARCHAR},
      PRO_ANSWER = #{record.proAnswer,jdbcType=VARCHAR},
      SECURITY_LEVEL = #{record.securityLevel,jdbcType=SMALLINT},
      DISABLE_FLG = #{record.disableFlg,jdbcType=SMALLINT},
      LOGIN_IP = #{record.loginIp,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_USER_IDENTITY = #{record.createUserIdentity,jdbcType=SMALLINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MODIFY_USER = #{record.modifyUser,jdbcType=VARCHAR},
      MODIFY_USER_IDENTITY = #{record.modifyUserIdentity,jdbcType=SMALLINT},
      MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      DELETE_FLG = #{record.deleteFlg,jdbcType=SMALLINT},
      VERSION = #{record.version,jdbcType=INTEGER},
      PASSWORD_LEVEL = #{record.passwordLevel,jdbcType=VARCHAR},
      USERNAME_FLAG = #{record.usernameFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlfc.zfgj.entity.UsrUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    update usr_user
    <set>
      <if test="perId != null">
        PER_ID = #{perId,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="proQuestion != null">
        PRO_QUESTION = #{proQuestion,jdbcType=VARCHAR},
      </if>
      <if test="proAnswer != null">
        PRO_ANSWER = #{proAnswer,jdbcType=VARCHAR},
      </if>
      <if test="securityLevel != null">
        SECURITY_LEVEL = #{securityLevel,jdbcType=SMALLINT},
      </if>
      <if test="disableFlg != null">
        DISABLE_FLG = #{disableFlg,jdbcType=SMALLINT},
      </if>
      <if test="loginIp != null">
        LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserIdentity != null">
        CREATE_USER_IDENTITY = #{createUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUser != null">
        MODIFY_USER = #{modifyUser,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserIdentity != null">
        MODIFY_USER_IDENTITY = #{modifyUserIdentity,jdbcType=SMALLINT},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null">
        DELETE_FLG = #{deleteFlg,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
      <if test="passwordLevel != null">
        PASSWORD_LEVEL = #{passwordLevel,jdbcType=VARCHAR},
      </if>
      <if test="usernameFlag != null">
        USERNAME_FLAG = #{usernameFlag,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlfc.zfgj.entity.UsrUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Nov 05 11:00:14 CST 2015.
    -->
    update usr_user
    set PER_ID = #{perId,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      PRO_QUESTION = #{proQuestion,jdbcType=VARCHAR},
      PRO_ANSWER = #{proAnswer,jdbcType=VARCHAR},
      SECURITY_LEVEL = #{securityLevel,jdbcType=SMALLINT},
      DISABLE_FLG = #{disableFlg,jdbcType=SMALLINT},
      LOGIN_IP = #{loginIp,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_USER_IDENTITY = #{createUserIdentity,jdbcType=SMALLINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_USER = #{modifyUser,jdbcType=VARCHAR},
      MODIFY_USER_IDENTITY = #{modifyUserIdentity,jdbcType=SMALLINT},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      DELETE_FLG = #{deleteFlg,jdbcType=SMALLINT},
      VERSION = #{version,jdbcType=INTEGER},
      PASSWORD_LEVEL = #{passwordLevel,jdbcType=VARCHAR},
      USERNAME_FLAG = #{usernameFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!--关联查询 
  组合sys_user
  临时方法，之后重构
   -->
  <select id="getByLoginName" resultType="com.dlfc.zfgj.entity.UsrUser" parameterType="com.dlfc.zfgj.entity.UsrUser">
  SELECT 
  
  	A.ID,
  	B.ID AS "empId",
  	B.COMPANY_ID AS "company.id",
  	B.OFFICE_ID AS "office.id",
    A.USERNAME	AS "login_name",
	A.PASSWORD,
	A.PER_ID,
<!--     	a.no, -->
	C.NAME,
	A.EMAIL,
<!-- 		A.phone, -->
	A.MOBILE,
<!-- 		a.user_type, -->
	A.LOGIN_IP,
	A.LAST_LOGIN_TIME AS "login_date",
<!-- 		a.remarks, -->
	A.DISABLE_FLG AS "login_flag",
<!-- 		a.photo, -->
	A.CREATE_USER AS "createBy.id",
	A.CREATE_TIME AS create_date,
	A.MODIFY_USER AS "updateBy.id",
	A.MODIFY_TIME AS update_date,
	A.DELETE_FLG AS del_flag,
    D.NAME AS "company.name",
    	<!-- c.parent_id AS "company.parent.id",
    	c.parent_ids AS "company.parentIds",
    	ca.id AS "company.area.id",
    	ca.name AS "company.area.name",
    	ca.parent_id AS "company.area.parent.id",
    	ca.parent_ids AS "company.area.parentIds", -->
    E.NAME AS "office.name",
    E.PARENT_ID AS "office.parent.id",
    E.PARENT_IDS AS "office.parentIds",
    (SELECT COUNT(1) COUNT FROM USR_HOU_COLLECTION UHC WHERE UHC.UID = A.ID AND  EXISTS (
			SELECT HHI.ID FROM HOU_HOUSE_INFO HHI,HOU_LEASE_INFO HLI WHERE HHI.ID = HLI.HID AND HHI.ID = UHC.HID AND HHI.DELETE_FLG = 0
		)) AS "collectCount"
<!--     	oa.id AS "office.area.id",
    	oa.name AS "office.area.name",
    	oa.parent_id AS "office.area.parent.id",
    	oa.parent_ids AS "office.area.parentIds", -->
    <!-- 	cu.id AS "company.primaryPerson.id",
    	cu.name AS "company.primaryPerson.name",
    	cu2.id AS "company.deputyPerson.id",
    	cu2.name AS "company.deputyPerson.name",
    	ou.id AS "office.primaryPerson.id",
    	ou.name AS "office.primaryPerson.name",
    	ou2.id AS "office.deputyPerson.id",
    	ou2.name AS "office.deputyPerson.name -->
  
  
    FROM
    USR_USER A 
    LEFT JOIN agt_emp_info B ON A.ID=B.USER_ID AND B.STATUS=0 AND B.DELETE_FLG = #{DEL_FLAG_NORMAL}
	LEFT JOIN sys_person C ON A.PER_ID=C.ID AND C.DELETE_FLG = #{DEL_FLAG_NORMAL}
	LEFT JOIN agt_comp_info D ON B.COMPANY_ID=D.ID AND D.DELETE_FLG = #{DEL_FLAG_NORMAL}
	LEFT JOIN sys_office E ON B.OFFICE_ID=E.ID AND E.DEL_FLAG = #{DEL_FLAG_NORMAL}
	WHERE A.USERNAME = #{loginName} AND A.DELETE_FLG = #{DEL_FLAG_NORMAL}
  </select>
  
  <!-- 判断email是否绑定过 -->
	<select id="isMailBinded" resultType="java.lang.Integer">
		SELECT
		COUNT(EMAIL)
		FROM
		USR_USER
		WHERE EMAIL=#{email}
	</select>
	
	<!-- 判断手机是否绑定过 -->
	<select id="isMobileBinded" resultType="java.lang.Integer">
		SELECT
		COUNT(MOBILE)
		FROM USR_USER
		WHERE MOBILE=#{mobile}
	</select>

	<resultMap id="UserResultMap" type="com.dlfc.zfgj.entity.UsrUser">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="PER_ID" jdbcType="VARCHAR" property="perId" />
		<result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="PASSWORD" jdbcType="VARCHAR" property="password" />
		<result column="USERNAME" jdbcType="VARCHAR" property="username" />
		<result column="PRO_QUESTION" jdbcType="VARCHAR" property="proQuestion" />
		<result column="PRO_ANSWER" jdbcType="VARCHAR" property="proAnswer" />
		<result column="SECURITY_LEVEL" jdbcType="SMALLINT" property="securityLevel" />
		<result column="DISABLE_FLG" jdbcType="SMALLINT" property="disableFlg" />
		<result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
		<result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
		<result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT"
			property="createUserIdentity" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
		<result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT"
			property="modifyUserIdentity" />
		<result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
		<result column="VERSION" jdbcType="INTEGER" property="version" />
		<result column="PASSWORD_LEVEL" jdbcType="VARCHAR" property="passwordLevel" />
		<result column="USERNAME_FLAG" jdbcType="BIT" property="usernameFlag" />
		<association column="{userId=ID}" property="userBankcardList" select="com.dlfc.zfgj.mapper.UsrUserBankcardMapper.findList" />
	</resultMap>

	<select id="selectAllByExample" parameterType="com.dlfc.zfgj.entity.UsrUserExample"
		resultMap="UserResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from usr_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	
	<select id="findByPerId" parameterType="java.lang.String" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from usr_user
		where PER_ID = #{id,jdbcType=VARCHAR}
		AND DELETE_FLG = 0
	</select>
	
	<select id="findById" parameterType="java.lang.String" resultMap="UserAllResultMap">
    select 
    <include refid="Base_Column_List" />
    from usr_user
    where ID = #{id,jdbcType=VARCHAR}
  </select>
	
	<resultMap id="UserAllResultMap" type="com.dlfc.zfgj.entity.UsrUser">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="PER_ID" jdbcType="VARCHAR" property="perId" />
		<result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="PASSWORD" jdbcType="VARCHAR" property="password" />
		<result column="USERNAME" jdbcType="VARCHAR" property="username" />
		<result column="PRO_QUESTION" jdbcType="VARCHAR" property="proQuestion" />
		<result column="PRO_ANSWER" jdbcType="VARCHAR" property="proAnswer" />
		<result column="SECURITY_LEVEL" jdbcType="SMALLINT" property="securityLevel" />
		<result column="DISABLE_FLG" jdbcType="SMALLINT" property="disableFlg" />
		<result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
		<result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
		<result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT"
			property="createUserIdentity" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
		<result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT"
			property="modifyUserIdentity" />
		<result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
		<result column="VERSION" jdbcType="INTEGER" property="version" />
		<result column="PASSWORD_LEVEL" jdbcType="VARCHAR" property="passwordLevel" />
		<result column="USERNAME_FLAG" jdbcType="BIT" property="usernameFlag" />
		<association column="{userId=ID}" property="userBankcardList" select="com.dlfc.zfgj.mapper.UsrUserBankcardMapper.findAllList" />
		<association column="{id=PER_ID}" property="sysPerson" select="com.dlfc.zfgj.mapper.SysPersonMapper.selectByPriKey" />
		<association column="{user_id=ID}" property="agtCertLink" select="com.dlfc.zfgj.mapper.AgtCertLinkMapper.findByUserId" />
		<association column="{uid=ID}" property="sysIdList" select="com.dlfc.zfgj.mapper.SysIdMapper.findAllList" />
		<association column="{userId=ID}" property="agtEmpInfo" select="com.dlfc.zfgj.mapper.AgtEmpInfoMapper.selectComp" />
		<association column="{userId=ID}" property="usrAccount" select="com.dlfc.zfgj.mapper.UsrAccountMapper.findInfo" />
	</resultMap>
	
	<select id="selectAllUserInfo" parameterType="com.dlfc.zfgj.entity.UsrUser"
		resultMap="UserAllResultMap">
		select
		usr_user.id,usr_user.per_id,
		usr_user.username,usr_user.create_time,usr_user.mobile
		from usr_user
		left join sys_person
		on usr_user.per_id = sys_person.id
		where 1= 1
		<if test="inputValue != ''">
			<if test="selectValue == 1">
				AND (
					 sys_person.name LIKE '%${inputValue}%'
				)
			</if>
			<if test="selectValue == 2">
				AND (
					usr_user.mobile LIKE '%${inputValue}%'
				)
			</if>
			<if test="selectValue == 3">
				AND (
					sys_person.id_no LIKE '%${inputValue}%'
				)
			</if>
		</if>
		<if test="id != null">
		and usr_user.id = #{id}
		</if>
	</select>
	
	<resultMap id="empUserResultMap" type="com.dlfc.zfgj.entity.UsrUser">
	    <id column="ID" jdbcType="VARCHAR" property="id" />
	    <result column="PER_ID" jdbcType="VARCHAR" property="perId" />
	    <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
	    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
	    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
	    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
	    <result column="PRO_QUESTION" jdbcType="VARCHAR" property="proQuestion" />
	    <result column="PRO_ANSWER" jdbcType="VARCHAR" property="proAnswer" />
	    <result column="SECURITY_LEVEL" jdbcType="SMALLINT" property="securityLevel" />
	    <result column="DISABLE_FLG" jdbcType="SMALLINT" property="disableFlg" />
	    <result column="LOGIN_IP" jdbcType="VARCHAR" property="loginIp" />
	    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
	    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
	    <result column="CREATE_USER_IDENTITY" jdbcType="SMALLINT" property="createUserIdentity" />
	    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="MODIFY_USER" jdbcType="VARCHAR" property="modifyUser" />
	    <result column="MODIFY_USER_IDENTITY" jdbcType="SMALLINT" property="modifyUserIdentity" />
	    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
	    <result column="DELETE_FLG" jdbcType="SMALLINT" property="deleteFlg" />
	    <result column="VERSION" jdbcType="INTEGER" property="version" />
	    <result column="PASSWORD_LEVEL" jdbcType="VARCHAR" property="passwordLevel" />
	    <result column="USERNAME_FLAG" jdbcType="BIT" property="usernameFlag" />
	    <result column="HOUSE_COUNT" jdbcType="VARCHAR" property="houseCount" />
	    <result column="RELEASE_STATUS" jdbcType="VARCHAR" property="releaseStatus" />
		<association column="{userId==ID}" property="agtEmpInfo" select="com.dlfc.zfgj.mapper.AgtEmpInfoMapper.find" />
	</resultMap>
	
	<select id="getEmpUserList" parameterType="com.dlfc.zfgj.entity.UsrUser" resultMap="empUserResultMap">
		
		select
		a.id,
		a.mobile,
		b.name personName,
		d.name company_name,
		c.avatar_id avatar,
		(SELECT COUNT(H.ID) FROM HOU_HOUSE_INFO H WHERE H.BEID = c.id AND H.DELETE_FLG = 0) HOUSE_COUNT,
		(SELECT COUNT(E.ID) FROM CON_CONTRACT E WHERE E.EID = c.id AND E.DELETE_FLG = 0 AND E.STATUS = 8) CONTRACT_COUNT
		from usr_user             a
		left join sys_person      b   on a.per_id = b.id
		left join agt_emp_info    c   on a.id = c.user_id
		left join agt_comp_info   d   on c.company_id = d.id
		where  c.status = 0
		<if test="id != null ">
			and c.id = #{id}
		</if>
		<if test="companyName != null ">
			and d.name = #{companyName}
		</if>
		<if test="sort == 0">
			order by a.create_time ASC
		</if>
		<if test="sort == 1">
			order by a.create_time DESC
		</if>
		<if test="number != null and number != 0">
			limit 0, #{number}
		</if>
	</select>
	
	<select id="selectUserList" parameterType="com.dlfc.zfgj.entity.UsrUser" resultMap="BaseResultMap">
		select * from
		(
		select DISTINCT
		c.id id,
		(SELECT COUNT(g.ID) FROM CON_CONTRACT g WHERE g.EID = c.id AND g.DELETE_FLG = 0 AND g.STATUS = 8) CONTRACT_COUNT
		from usr_user             a
		left join agt_emp_info    c   on a.id = c.user_id
		left join sys_person      b   on c.pid = b.id
		left join agt_comp_info   d   on c.company_id = d.id
		left join sys_office_area_link e on c.OFFICE_ID = e.OFFICE_ID
		left join sys_trade_areas f    on e.AREA_ID = f.ID
		where  c.status = 0
		<if test="companyId != null and companyId != ''">
			and d.id = #{companyId}
		</if>
		<if test="personName != null and personName !=''">
			and b.name like '%${personName}%'
		</if>
		<if test="districtDist != null ">
			and e.area_id = #{districtDist}
		</if>
		<if test="districtArea != null ">
			and f.parent_id = #{districtArea}
		</if>
		<if test="companySpell != null and companySpell != ''">
			and left(d.s_spelling,1) in (${companySpell})
		</if>
		) h 
		<if test="orderBy != null and orderBy != ''">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getEmpUser" parameterType="string" resultMap="empUserResultMap">
		SELECT
		A.ID,
		A.MOBILE,
		B.NAME PERSONNAME,
		D.NAME COMPANY_NAME,
		(SELECT S.FILE_PATH FROM SYS_INFO_ATT S WHERE S.LID = A.ID AND S.FILE_TYPE = '20' AND S.DELETE_FLG = '0' LIMIT 0,1) AVATAR,
		(SELECT COUNT(H.ID) FROM HOU_HOUSE_INFO H WHERE H.BEID = C.ID AND H.DELETE_FLG = 0) HOUSE_COUNT
		FROM USR_USER             A
		LEFT JOIN AGT_EMP_INFO    C   ON A.ID = C.USER_ID
		LEFT JOIN SYS_PERSON      B   ON C.PID = B.ID
		LEFT JOIN AGT_COMP_INFO   D   ON C.COMPANY_ID = D.ID
		WHERE  C.STATUS = 0
			AND C.ID = #{eid}
	</select>
	
	<select id="getUerUserList" parameterType="string" resultMap="empUserResultMap">
		SELECT
			A.ID,
			A.MOBILE,
			B.NAME PERSONNAME,
			D.NAME COMPANY_NAME,
			E.FILE_PATH AVATAR,
			HHI.ID BASE_ID,
			(SELECT HLI.RELEASE_STATUS FROM HOU_LEASE_INFO HLI WHERE HID = HHI.ID AND HLI.RELEASE_STATUS = 1 LIMIT 0,1) RELEASE_STATUS,
			C.ID PER_ID
			
		FROM HOU_HOUSE_BASEINFO HHB
		INNER JOIN HOU_HOUSE_INFO HHI ON HHI.BASE_ID = HHB.ID
		INNER JOIN AGT_EMP_INFO  C ON HHI.EID = C.ID
		INNER JOIN USR_USER             A  ON A.ID = C.USER_ID
		LEFT JOIN SYS_PERSON      B   ON A.PER_ID = B.ID
		LEFT JOIN AGT_COMP_INFO   D   ON C.COMPANY_ID = D.ID
		LEFT JOIN SYS_INFO_ATT    E   ON A.ID = E.LID AND E.FILE_TYPE =  '20'
		WHERE  C.STATUS = 0
		AND HHI.BASE_ID = #{uid}
	</select>
	
	<select id="getUerUserCount" parameterType="string" resultType="string">
		SELECT
			COUNT(1)
		FROM HOU_HOUSE_BASEINFO HHB
		INNER JOIN HOU_HOUSE_INFO HHI ON HHI.BASE_ID = HHB.ID
		INNER JOIN AGT_EMP_INFO  C ON HHI.EID = C.ID
		INNER JOIN USR_USER             A  ON A.ID = C.USER_ID
		LEFT JOIN SYS_PERSON      B   ON A.PER_ID = B.ID
		LEFT JOIN AGT_COMP_INFO   D   ON C.COMPANY_ID = D.ID
		WHERE  C.STATUS = 0
		AND HHI.BASE_ID = #{uid}
	</select>
	
	<!-- 根据perID 获取User_id -->
	<select id="getUidByPid" parameterType="string" resultType="string">
		SELECT
			ID
		FROM USR_USER
		WHERE DELETE_FLG = 0
		AND	PER_ID = #{id}
		LIMIT 0,1
	</select>
	
	<!-- 根据User_id 获取perID -->
	<select id="getPidByUid" parameterType="string" resultType="string">
		SELECT
			PER_ID 
		FROM USR_USER
		WHERE DELETE_FLG = 0
		AND	ID = #{id}
		LIMIT 0,1
	</select>
	
	<!-- 根据User_id 获取User -->
	<select id="selectUser" parameterType="string" resultType="com.dlfc.zfgj.entity.UsrUser">
		SELECT
			U.MOBILE, P.NAME USERNAME ,E.FILE_PATH AVATAR,P.ID_NO
		FROM USR_USER U
		INNER JOIN SYS_PERSON  P ON U.PER_ID = P.ID
		LEFT JOIN SYS_INFO_ATT    E   ON U.ID = E.LID AND E.FILE_TYPE =  '19'
		WHERE U.DELETE_FLG = 0
		AND P.DELETE_FLG = 0
		AND	U.ID = #{id}
		LIMIT 0,1
	</select>

  <select id="findByUserNameAndDelFlg" resultType="com.dlfc.zfgj.entity.UsrUser">
    SELECT
    A.ID,
    A.USERNAME,
    A.USER_IDENTITY,
    C.PHONE PHONE,
    C.GRADE SCORE,
    C.ID EMPID,
    B.NAME PERSONNAME,
	D.NAME COMPANY_NAME,
	E.FILE_PATH AVATAR,
	F.IS_CERT FLAG
    FROM usr_user A
    INNER JOIN AGT_EMP_INFO  C ON A.ID = C.USER_ID
    LEFT JOIN SYS_PERSON      B   ON A.PER_ID = B.ID
    LEFT JOIN AGT_COMP_INFO   D   ON C.COMPANY_ID = D.ID
    LEFT JOIN SYS_INFO_ATT    E   ON A.ID = E.LID AND E.FILE_TYPE =  '20'
    LEFT JOIN AGT_CERT_LINK   F   ON A.ID = F.USER_ID
    WHERE A.USERNAME = #{username,jdbcType=VARCHAR}
    AND A.DELETE_FLG = #{delflg}
  </select>
  <select id="selectUserByUsername" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from usr_user
    where (mobile = #{username,jdbcType=VARCHAR} or username = #{username,jdbcType=VARCHAR})
    AND
    DELETE_FLG=0
  </select>
</mapper>